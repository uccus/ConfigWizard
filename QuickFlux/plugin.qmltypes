import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable quickflux 1.0'

Module {
    dependencies: ["QtQuick 2.0"]
    Component {
        name: "QFActionCreator"
        prototype: "QObject"
        exports: [
            "quickflux/ActionCreator 1.0",
            "quickflux/ActionCreator 1.1"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "dispatcher"; type: "QFDispatcher"; isPointer: true }
        Method { name: "genKeyTable"; type: "string" }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
        }
    }
    Component {
        name: "QFAppDispatcher"
        prototype: "QFDispatcher"
        exports: ["quickflux/AppDispatcher 1.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QFAppListener"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["quickflux/AppListener 1.0", "quickflux/AppListener 1.1"]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "filter"; type: "string" }
        Property { name: "filters"; type: "QStringList" }
        Property { name: "alwaysOn"; type: "bool" }
        Property { name: "listenerId"; type: "int" }
        Property { name: "waitFor"; type: "QList<int>" }
        Signal {
            name: "dispatched"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "on"
            type: "QFAppListener*"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "removeListener"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "removeAllListener"
            Parameter { name: "type"; type: "string" }
        }
        Method { name: "removeAllListener" }
    }
    Component {
        name: "QFAppListenerGroup"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "quickflux/AppListenerGroup 1.0",
            "quickflux/AppListenerGroup 1.1"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "listenerIds"; type: "QList<int>" }
        Property { name: "waitFor"; type: "QList<int>" }
    }
    Component {
        name: "QFAppScript"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["quickflux/AppScript 1.0", "quickflux/AppScript 1.1"]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "script"; type: "QQmlScriptString" }
        Property { name: "running"; type: "bool" }
        Property { name: "runWhen"; type: "string" }
        Property { name: "message"; type: "QJSValue"; isReadonly: true }
        Property { name: "listenerId"; type: "int" }
        Property { name: "waitFor"; type: "QList<int>" }
        Property { name: "autoExit"; type: "bool" }
        Signal { name: "started" }
        Signal {
            name: "finished"
            Parameter { name: "returnCode"; type: "int" }
        }
        Method {
            name: "exit"
            Parameter { name: "returnCode"; type: "int" }
        }
        Method { name: "exit" }
        Method {
            name: "run"
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method { name: "run" }
        Method {
            name: "once"
            type: "QFAppScriptRunnable*"
            Parameter { name: "condition"; type: "QJSValue" }
            Parameter { name: "script"; type: "QJSValue" }
        }
        Method {
            name: "on"
            Parameter { name: "condition"; type: "QJSValue" }
            Parameter { name: "script"; type: "QJSValue" }
        }
    }
    Component {
        name: "QFAppScriptGroup"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: [
            "quickflux/AppScriptGroup 1.0",
            "quickflux/AppScriptGroup 1.1"
        ]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "scripts"; type: "QJSValue" }
        Method { name: "exitAll" }
    }
    Component {
        name: "QFAppScriptRunnable"
        prototype: "QObject"
        Method {
            name: "then"
            type: "QFAppScriptRunnable*"
            Parameter { name: "condition"; type: "QJSValue" }
            Parameter { name: "value"; type: "QJSValue" }
        }
    }
    Component {
        name: "QFDispatcher"
        prototype: "QObject"
        exports: ["quickflux/Dispatcher 1.1"]
        exportMetaObjectRevisions: [0]
        Signal {
            name: "dispatched"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
        }
        Method {
            name: "waitFor"
            Parameter { name: "ids"; type: "QList<int>" }
        }
        Method {
            name: "addListener"
            type: "int"
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "removeListener"
            Parameter { name: "id"; type: "int" }
        }
    }
    Component {
        name: "QFFilter"
        defaultProperty: "__children"
        prototype: "QObject"
        exports: ["quickflux/Filter 1.0", "quickflux/Filter 1.1"]
        exportMetaObjectRevisions: [0, 0]
        Property { name: "type"; type: "string" }
        Property { name: "types"; type: "QStringList" }
        Property { name: "__children"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "dispatched"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
    }
    Component {
        name: "QFHydrate"
        prototype: "QObject"
        exports: ["quickflux/Hydrate 1.1"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "rehydrate"
            Parameter { name: "dest"; type: "QObject"; isPointer: true }
            Parameter { name: "source"; type: "QVariantMap" }
        }
        Method {
            name: "dehydrate"
            type: "QVariantMap"
            Parameter { name: "source"; type: "QObject"; isPointer: true }
        }
    }
    Component {
        name: "QFKeyTable"
        prototype: "QObject"
        exports: ["quickflux/KeyTable 1.0", "quickflux/KeyTable 1.1"]
        exportMetaObjectRevisions: [0, 0]
        Method {
            name: "genHeaderFile"
            type: "string"
            Parameter { name: "className"; type: "string" }
        }
        Method {
            name: "genSourceFile"
            type: "string"
            Parameter { name: "className"; type: "string" }
            Parameter { name: "headerFile"; type: "string" }
        }
    }
    Component {
        name: "QFMiddleware"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["quickflux/Middleware 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "filterFunctionEnabled"; type: "bool" }
        Property { name: "_nextCallback"; type: "QJSValue" }
        Signal {
            name: "dispatched"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "next"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "next"
            Parameter { name: "type"; type: "string" }
        }
    }
    Component {
        name: "QFMiddlewareList"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["quickflux/MiddlewareList 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "applyTarget"; type: "QObject"; isPointer: true }
        Method {
            name: "apply"
            Parameter { name: "target"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "next"
            Parameter { name: "senderId"; type: "int" }
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
    }
    Component {
        name: "QFStore"
        defaultProperty: "children"
        prototype: "QObject"
        exports: ["quickflux/Store 1.1"]
        exportMetaObjectRevisions: [0]
        Property { name: "bindSource"; type: "QObject"; isPointer: true }
        Property { name: "children"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "redispatchTargets"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "filterFunctionEnabled"; type: "bool" }
        Signal {
            name: "dispatched"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
            Parameter { name: "message"; type: "QJSValue" }
        }
        Method {
            name: "dispatch"
            Parameter { name: "type"; type: "string" }
        }
        Method {
            name: "bind"
            Parameter { name: "source"; type: "QObject"; isPointer: true }
        }
    }
}
